（1） 综述与基本要求
	把c++语言理解为c语言的超集，从工作的角度来讲必须学习c++语言，
	学习本课程需要c语言基础
（2）自我介绍
	有23年开发经验，在游戏，电信领域。

（3）c++语言难度和就业问题
	c++语言偏重系统软件设计，主要是c++语言对硬件和系统资源的支持。java主要用于做信息系统
	linux系统c++开发人员比windows C++多（大概7：3比例），后期需要学习相应的平台，进行相应的架构设计。

（4）c++语言发展历程
	c语言在b语言上发展起来的，c++语言简单可以理解为c语言的超集，引入了类，虚函数等。
	在1984年确认c++语言，--->标准模板库(STL)包含在c++标准中
	1998年，正式发布第一个c++标准，98标准。主流编译器都支持这个标准。
		在03年发布了98标准的错误修正版，但是核心东西改动不大。
	c++11标准在2011年发布，也叫现代c++，变换非常大，增加了很多新特性，差别大好像一种新语言
	c++14标准在2014年在c++11的基础上增加了一些新的功能。
	c++17也是在原来的基础上增加了新特性。
	将来：
	c++20，c++23，c++26...

	因为历史的原因，很多服务器程序都是使用c++98标准写的，是否需要重构需要考虑。
	但是对于新项目，新特性会使项目开发更加快速。语言在功能、性能很多方面都会有很大提升、

（5）我们学习这门课程遵循哪一个c++标准
	全部涵盖，c++98（老版本），c++11，c++14新标准会重点提出

（6）c++语言学习之道和学习忠告
	学习之道：（1）c++语言语法学习，正确的写出c++程序
			（2）c++标准程序库的学习
			两部分相辅相成，不能只学习c++语法。本课程不专门讲解c++标准库，
			当遇到stl中的库知识会讲解。
				（1）好老师自带buffer，少踩坑
				（2）不停的努力，20年c++大师。
			程序的规模会使程序的难度大幅度提高，1万行程序和10万行代码完全不是一个等级。
			（3）举一反三，积极自学，善用百度

	学习忠告：
		（1）c++程序设计理念和实现风格与c语言不同，不要使用c++来写c程序
		（2）学习方面：开始学习c++不要贪细求全，要注意领域编程思想，注意提高自己的综合能力，以实现更好的
			开发程序为目的
			使用方面：c++语言太强大了，我们只会用到c++的一个子集。这是目前共识。

		（3）c++标准库中的有的内容尽量不要自己写
		（4）c++中的新功能，新写法，取代c语言中的一些功能和写法，积极学习新写法。

（7）开发环境安装和设置
	本课程widows和linux平台都适用，选择windows平台对初学者非常用利，方便加断电，看内存。
	建议安装visual studio 2017.
	最少适用vs2012.